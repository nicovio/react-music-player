{"version":3,"sources":["components/LibrarySong.jsx","components/Library.jsx","components/Nav.jsx","util.js","components/Spinner.jsx","components/PlayButton.jsx","components/Player.jsx","components/Song.jsx","data.js","App.jsx","reportWebVitals.js","index.js"],"names":["LibrarySong","song","currentSong","changeSong","className","id","onClick","alt","name","src","cover","artist","Library","songs","libraryStatus","map","Nav","setLibraryStatus","icon","faMusic","getAnimationPercentaje","currentTime","duration","Math","round","Spinner","PlayButton","isPlaying","isLoading","playSongHandler","size","faPause","faPlay","Player","songInfo","setSongInfo","audioRef","skipTrackHandler","getTime","time","minutos","floor","segundos","slice","trackAnimation","transform","animationPercentaje","trackBackground","color","style","background","value","min","max","onChange","e","target","current","type","faAngleLeft","pause","play","faAngleRight","Song","chillHop","uuidv4","audio","App","useRef","useState","getData","setCurrentSong","setIsPlaying","setIsLoading","autoPlay","setAutoPlay","timeUpdateHandler","direction","nextSongIndex","findIndex","DIRECTION","length","nextSong","onError","console","log","onPause","onPlay","onEnded","onLoadStart","onLoadedMetadata","onTimeUpdate","ref","forward","back","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAeeA,EAfK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACxC,OACE,sBACEC,UAAS,uBAAkBH,EAAKI,KAAOH,EAAYG,GAAK,WAAa,gBACrEC,QAAS,kBAAMH,EAAWF,IAF5B,UAIE,qBAAKM,IAAKN,EAAKO,KAAMC,IAAKR,EAAKS,QAC/B,sBAAKN,UAAU,mBAAf,UACE,6BAAKH,EAAKO,OACV,6BAAKP,EAAKU,gBCMHC,EAbC,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAOX,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,WAAYW,EAAoB,EAApBA,cACjD,OACE,sBAAKV,UAAS,kBAAaU,EAAgB,iBAAmB,IAA9D,UACE,yCACA,qBAAKV,UAAU,gBAAf,SACGS,EAAME,KAAI,SAACd,GAAD,OACT,cAAC,EAAD,CAAaA,KAAMA,EAAMC,YAAaA,EAAaC,WAAYA,GAAiBF,EAAKI,a,cCOhFW,EAZH,SAAC,GAAyC,IAAvCF,EAAsC,EAAtCA,cAAeG,EAAuB,EAAvBA,iBAC5B,OACE,gCACE,uCACA,yBAAQX,QAAS,kBAAMW,GAAkBH,IAAzC,oBAEE,cAAC,IAAD,CAAiBI,KAAMC,aCTlBC,EAAyB,SAACC,EAAaC,GAChD,OAAOD,GAAeC,EAAWC,KAAKC,MAAqB,IAAdH,EAAqBC,GAAY,GCGnEG,EAJC,WACd,OAAO,qBAAKrB,UAAU,aCeTsB,EAZI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAC1C,OACE,mCACGD,EACC,cAAC,EAAD,IAEA,cAAC,IAAD,CAAiBtB,QAASuB,EAAiBzB,UAAU,OAAO0B,KAAK,KAAKZ,KAAMS,EAAYI,IAAUC,SCmD3FC,EAvDA,SAAC,GAA8F,IAA5FC,EAA2F,EAA3FA,SAAUC,EAAiF,EAAjFA,YAAaR,EAAoE,EAApEA,UAAWS,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,iBAAkBT,EAA6B,EAA7BA,UAAW1B,EAAkB,EAAlBA,YASnFoC,EAAU,SAACC,GACf,IAAMC,EAAUjB,KAAKkB,MAAMF,EAAO,IAC5BG,GAAY,IAAMnB,KAAKkB,MAAMF,EAAO,KAAKI,OAAO,GACtD,MAAM,GAAN,OAAUH,EAAV,YAAqBE,IAajBE,EAAiB,CACrBC,UAAU,cAAD,OAAgBX,EAASY,oBAAzB,OAGLC,EAAe,oCAAgC7C,EAAY8C,MAAM,GAAlD,aAAyD9C,EAAY8C,MAAM,GAA3E,MAErB,OACE,sBAAK5C,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,4BAAIkC,EAAQJ,EAASb,eACrB,sBAAK4B,MAAO,CAAEC,WAAYH,GAAmB3C,UAAU,QAAvD,UACE,uBAAO+C,MAAOjB,EAASb,YAAa+B,IAAK,EAAGC,IAAKnB,EAASZ,SAAUgC,SArBxD,SAACC,GACnB,IAAMlC,EAAckC,EAAEC,OAAOL,MAC7BhB,EAAY,2BACPD,GADM,IAETb,cACAyB,oBAAqB1B,EAAuBC,EAAaa,EAASZ,aAEpEc,EAASqB,QAAQpC,YAAcA,GAckEqC,KAAK,UAChG,qBAAKT,MAAOL,EAAgBxC,UAAU,qBAExC,4BAAIkC,EAAQJ,EAASZ,eAEvB,sBAAKlB,UAAU,eAAf,UACE,cAAC,IAAD,CAAiBE,QAAS,kBAAM+B,EAAiB,SAASjC,UAAU,YAAY0B,KAAK,KAAKZ,KAAMyC,MAChG,cAAC,EAAD,CAAYhC,UAAWA,EAAWC,UAAWA,EAAWC,gBA1CtC,WAClBF,EACFS,EAASqB,QAAQG,QAEjBxB,EAASqB,QAAQI,UAuCf,cAAC,IAAD,CACEvD,QAAS,kBAAM+B,EAAiB,YAChCjC,UAAU,eACV0B,KAAK,KACLZ,KAAM4C,aC1CDC,EAVF,SAAC,GAAqB,IAAnB7D,EAAkB,EAAlBA,YACd,OACE,sBAAKE,UAAU,iBAAf,UACE,qBAAKK,IAAKP,EAAYQ,MAAOH,IAAKL,EAAYM,OAC9C,6BAAKN,EAAYM,OACjB,6BAAKN,EAAYS,a,QCwDRqD,MA7Df,WACI,MAAO,CACH,CACIxD,KAAM,eACNG,OAAQ,sBACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,gDAEX,CACI1D,KAAM,UACNG,OAAQ,0BACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,gDAEX,CACI1D,KAAM,aACNG,OAAQ,OACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,iDAEX,CACI1D,KAAM,gBACNG,OAAQ,OACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,iDAEX,CACI1D,KAAM,aACNG,OAAQ,2BACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,iDAEX,CACI1D,KAAM,qBACNG,OAAQ,oBACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,iDAEX,CACI1D,KAAM,SACNG,OAAQ,SACRD,MAAO,yGACPL,GAAI4D,cACJjB,MAAO,CAAC,UAAW,WACnBkB,MAAO,mD,MC+BJC,MAhFf,WACE,IAAM/B,EAAWgC,iBAAO,MACxB,EAA0BC,mBAASC,KAAnC,mBAAOzD,EAAP,KACA,GADA,KACsCwD,mBAASxD,EAAM,KAArD,mBAAOX,EAAP,KAAoBqE,EAApB,KACA,EAAkCF,oBAAS,GAA3C,mBAAO1C,EAAP,KAAkB6C,EAAlB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOzC,EAAP,KAAkB6C,EAAlB,KACA,EAAgCJ,mBAAS,CACvChD,YAAa,EACbC,SAAU,EACVwB,oBAAqB,IAHvB,mBAAOZ,EAAP,KAAiBC,EAAjB,KAKA,EAA0CkC,oBAAS,GAAnD,mBAAOvD,EAAP,KAAsBG,EAAtB,KACA,EAAgCoD,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAACrB,GACzB,IAAMlC,EAAckC,EAAEC,OAAOnC,YACvBC,EAAWiC,EAAEC,OAAOlC,UAAY,EACtCa,EAAY,2BACPD,GADM,IAETb,cACAC,WACAwB,oBAAqB1B,EAAuBC,EAAaC,OAIvDe,EAAmB,SAACwC,GACxB,IACMC,GADejE,EAAMkE,WAAU,SAAC9E,GAAD,OAAUA,EAAKI,KAAOH,EAAYG,MACjC2E,EAAUH,IAAchE,EAAMoE,OAC9DC,EAAWJ,GAAiB,EAAIjE,EAAMiE,GAAiBjE,EAAMA,EAAMoE,OAAS,GAClF9E,EAAW+E,IAGP/E,EAAa,SAAC+E,GAClBX,EAAeW,GACVR,GACHC,GAAY,IAgBhB,OACE,sBAAKvE,UAAS,cAASU,EAAgB,iBAAmB,IAA1D,UACE,cAAC,EAAD,CAAKA,cAAeA,EAAeG,iBAAkBA,IACrD,cAAC,EAAD,CAAMf,YAAaA,IACnB,cAAC,EAAD,CACEgC,SAAUA,EACVC,YAAaA,EACbR,UAAWA,EACXS,SAAUA,EACVC,iBAAkBA,EAClBT,UAAWA,EACX1B,YAAaA,IAEf,cAAC,EAAD,CAASW,MAAOA,EAAOX,YAAaA,EAAaC,WAAYA,EAAYW,cAAeA,IACxF,uBACEqE,QAnBU,SAAC5B,GACf6B,QAAQC,IAAI9B,IAmBR+B,QAAS,kBAAMd,GAAa,IAC5Be,OAAQ,kBAAMf,GAAa,IAC3BgB,QAAS,kBAAMnD,EAAiB,YAChCoD,YAAa,kBAAMhB,GAAa,IAChCiB,iBAhCmB,SAACnC,GACxBqB,EAAkBrB,GAClBkB,GAAa,GACTC,GACFtC,EAASqB,QAAQI,QA6Bf8B,aAAcf,EACdgB,IAAKxD,EACL3B,IAAKP,EAAYgE,YAQnBc,EAAY,CAChBa,QAAS,EACTC,MAAO,GCjFMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3979d39f.chunk.js","sourcesContent":["const LibrarySong = ({ song, currentSong, changeSong }) => {\r\n  return (\r\n    <div\r\n      className={`library-song ${song.id === currentSong.id ? 'selected' : 'not-selected'}`}\r\n      onClick={() => changeSong(song)}\r\n    >\r\n      <img alt={song.name} src={song.cover} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LibrarySong\r\n","import LibrarySong from './LibrarySong'\r\n\r\nconst Library = ({ songs, currentSong, changeSong, libraryStatus }) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong song={song} currentSong={currentSong} changeSong={changeSong} key={song.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Library\r\n","import { faMusic } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","export const getAnimationPercentaje = (currentTime, duration) => {\r\n    return currentTime && duration ? Math.round((currentTime * 100) / duration) : 0\r\n}","const Spinner = () => {\r\n  return <div className=\"spinner\"></div>\r\n}\r\n\r\nexport default Spinner\r\n","import { faPause, faPlay } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Spinner from './Spinner'\r\n\r\nconst PlayButton = ({ isPlaying, isLoading, playSongHandler }) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayButton\r\n","import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\nimport { getAnimationPercentaje } from '../util'\r\nimport PlayButton from './PlayButton'\r\n\r\nconst Player = ({ songInfo, setSongInfo, isPlaying, audioRef, skipTrackHandler, isLoading, currentSong }) => {\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause()\r\n    } else {\r\n      audioRef.current.play()\r\n    }\r\n  }\r\n\r\n  const getTime = (time) => {\r\n    const minutos = Math.floor(time / 60)\r\n    const segundos = ('0' + Math.floor(time % 60)).slice(-2)\r\n    return `${minutos}:${segundos}`\r\n  }\r\n\r\n  const dragHandler = (e) => {\r\n    const currentTime = e.target.value\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime,\r\n      animationPercentaje: getAnimationPercentaje(currentTime, songInfo.duration),\r\n    })\r\n    audioRef.current.currentTime = currentTime\r\n  }\r\n\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentaje}%)`,\r\n  }\r\n\r\n  const trackBackground = `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]} )`\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div style={{ background: trackBackground }} className=\"track\">\r\n          <input value={songInfo.currentTime} min={0} max={songInfo.duration} onChange={dragHandler} type=\"range\" />\r\n          <div style={trackAnimation} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{getTime(songInfo.duration)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon onClick={() => skipTrackHandler('back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\r\n        <PlayButton isPlaying={isPlaying} isLoading={isLoading} playSongHandler={playSongHandler} />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('forward')}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Song\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Jazz Cabbage\",\r\n            artist: \"Ian Ewing, Strehlow\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#C24C43\", \"#FDF0DD\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9363\",\r\n        },\r\n        {\r\n            name: \"Lagoons\",\r\n            artist: \"Strehlow, Chris Mazuera\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#C24C43\", \"#FDF0DD\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8266\",\r\n        },\r\n        {\r\n            name: \"Conflicted\",\r\n            artist: \"Hanz\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#F5C48A\", \"#483B2A\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=24642\",\r\n        },\r\n        {\r\n            name: \"Falling Short\",\r\n            artist: \"Hanz\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#A46E77\", \"#475770\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=24643\",\r\n        },\r\n        {\r\n            name: \"Looking In\",\r\n            artist: \"Smile High, Teddy Roxpin\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/08/af3ce13ad39d38057f00144f8a7c295877ccfec1-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#357B83\", \"#A7D9D6\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=23335\",\r\n        },\r\n        {\r\n            name: \"Where The Sun Goes\",\r\n            artist: \"Delayde, anybodyy\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/09/6a9ef8ac00e168d3308fdf9e336874c03fab829d-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#855CD2\", \"#ACE1F6\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=23188\",\r\n        },\r\n        {\r\n            name: \"Places\",\r\n            artist: \"Ruck P\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/034f52eeaeceb144cca67b0930d705d32fc39e37-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            color: [\"#F6A565\", \"#080109\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=20563\",\r\n        },\r\n    ]\r\n}\r\n\r\nexport default chillHop","import { useRef, useState } from 'react'\nimport Library from './components/Library'\nimport Nav from './components/Nav'\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport getData from './data'\nimport './styles/app.scss'\nimport { getAnimationPercentaje } from './util'\n\nfunction App() {\n  const audioRef = useRef(null)\n  const [songs, setSongs] = useState(getData())\n  const [currentSong, setCurrentSong] = useState(songs[0])\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentaje: 0,\n  })\n  const [libraryStatus, setLibraryStatus] = useState(true)\n  const [autoPlay, setAutoPlay] = useState(false)\n\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime\n    const duration = e.target.duration || 0\n    setSongInfo({\n      ...songInfo,\n      currentTime,\n      duration,\n      animationPercentaje: getAnimationPercentaje(currentTime, duration),\n    })\n  }\n\n  const skipTrackHandler = (direction) => {\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n    const nextSongIndex = (currentIndex + DIRECTION[direction]) % songs.length\n    const nextSong = nextSongIndex > -1 ? songs[nextSongIndex] : songs[songs.length - 1]\n    changeSong(nextSong)\n  }\n\n  const changeSong = (nextSong) => {\n    setCurrentSong(nextSong)\n    if (!autoPlay) {\n      setAutoPlay(true)\n    }\n  }\n\n  const onLoadedMetadata = (e) => {\n    timeUpdateHandler(e)\n    setIsLoading(false)\n    if (autoPlay) {\n      audioRef.current.play()\n    }\n  }\n\n  const onError = (e) => {\n    console.log(e)\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n        skipTrackHandler={skipTrackHandler}\n        isLoading={isLoading}\n        currentSong={currentSong}\n      />\n      <Library songs={songs} currentSong={currentSong} changeSong={changeSong} libraryStatus={libraryStatus} />\n      <audio\n        onError={onError}\n        onPause={() => setIsPlaying(false)}\n        onPlay={() => setIsPlaying(true)}\n        onEnded={() => skipTrackHandler('forward')}\n        onLoadStart={() => setIsLoading(true)}\n        onLoadedMetadata={onLoadedMetadata}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  )\n}\n\nexport default App\n\nconst DIRECTION = {\n  forward: 1,\n  back: -1,\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}